(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{620:function(t,v,_){"use strict";_.r(v);var a=_(6),r=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("这篇博客主要记录 KVM 学习中的收获和心得，主要阅读书籍为《深度实践 KVM》")]),t._v(" "),_("h2",{attrs:{id:"kvm-介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#kvm-介绍"}},[t._v("#")]),t._v(" KVM 介绍")]),t._v(" "),_("h3",{attrs:{id:"虚拟化介绍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#虚拟化介绍"}},[t._v("#")]),t._v(" 虚拟化介绍")]),t._v(" "),_("p",[t._v("KVM 全称 Kernel-based Virtual Machine.")]),t._v(" "),_("p",[t._v("KVM 是一种开源的虚拟化技术，是 OpenStack 平台上份额较高的"),_("strong",[t._v("虚拟化引擎")]),t._v("。")]),t._v(" "),_("p",[t._v("KVM 必须在具有 Intel VT 或 AMD-V 功能的 X86 平台上运行，在 3.9 内核以后加入了对 ARM 的支持。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[t._v("X86 平台的指令集权限分为 Ring 0 到 Ring 3 共计 4 个特权模式，操作系统一般使用 Ring 0 级别，驱动程序使用 Ring 1 和 Ring 2 级别，应用程序使用 Ring 3 级别。")]),t._v(" "),_("p",[t._v("VMware 公司的虚拟化技术将自己的虚拟化引擎 VMM 放在了 Ring 1 层，这是一种软件全虚拟化方案。")])]),_("p",[t._v("Intel 公司推出了对 CPU 指令进行改造的方案 VT-x，基于"),_("strong",[t._v("硬件全虚拟化")]),t._v("方案，是当前虚拟化引擎的主要解决方案。")]),t._v(" "),_("blockquote",[_("p",[t._v("简而言之，就是使得物理硬件支持虚拟化特性。由于基于硬件，故其效率非常高。")])]),t._v(" "),_("p",[t._v("还有一种"),_("strong",[t._v("容器虚拟化")]),t._v("方案，最著名的就是 Docker。其原理是基于 CGroups 和 Namespace 等技术将进程隔离，使得每个进程就像一台单独的虚拟机一样。")]),t._v(" "),_("blockquote",[_("p",[t._v("容易虚拟化当下发展较为广泛，比如 K8S 等，个人认为这是学习的重点。")])]),t._v(" "),_("h3",{attrs:{id:"kvm-架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#kvm-架构"}},[t._v("#")]),t._v(" KVM 架构")]),t._v(" "),_("p",[t._v("KVM Driver 包括在 Linux Kernel 中，一台虚拟机就是一个普通的 Linux 进程，对虚拟机的管理通过对这个进程的管理加以完成。")]),t._v(" "),_("p",[t._v("由于对进程的管理十分复杂，RedHat 发布了开源的项目"),_("strong",[t._v(" Libvirt")]),t._v("（有 API 和命令行管理工具），现有的大多数管理平台通过 Libvirt 来完成 KVM 虚拟机的管理，如 OpenStack，CloudStack 和 OpenNebula 等。")]),t._v(" "),_("p",[t._v("Libvirt 主要由 3 部分组成：")]),t._v(" "),_("ol",[_("li",[t._v("一套 API 的 lib 库，支持主流的编程语言。")]),t._v(" "),_("li",[t._v("Libvirtd 服务。")]),t._v(" "),_("li",[t._v("命令行工具 virsh。")])]),t._v(" "),_("p",[t._v("一般而言，KVM 的管理都是使用 Libvirt。")]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[t._v("常用的企业级虚拟化产品主要有：VMware（EMC），HyperV（微软），Xen（开源），KVM（开源）。")])]),_("h2",{attrs:{id:"网络虚拟化技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#网络虚拟化技术"}},[t._v("#")]),t._v(" 网络虚拟化技术")]),t._v(" "),_("p",[t._v("一些容易忘的点，写在这随时查阅。")]),t._v(" "),_("h3",{attrs:{id:"虚拟机的网络模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机的网络模式"}},[t._v("#")]),t._v(" 虚拟机的网络模式")]),t._v(" "),_("p",[t._v("对比一下：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th"),t._v(" "),_("th",[t._v("NAT")]),t._v(" "),_("th",[t._v("Bridged")]),t._v(" "),_("th",[t._v("Internal")]),t._v(" "),_("th",[t._v("Host-Only")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("虚拟机 -> 主机")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("× 可配")])]),t._v(" "),_("tr",[_("td",[t._v("主机 -> 虚拟机")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("× 可配")])]),t._v(" "),_("tr",[_("td",[t._v("虚拟机 -> 其他主机")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("× 可配")])]),t._v(" "),_("tr",[_("td",[t._v("其他主机 -> 虚拟机")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("×  可配")])]),t._v(" "),_("tr",[_("td",[t._v("虚拟机之间")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("√")]),t._v(" "),_("td",[t._v("×")]),t._v(" "),_("td",[t._v("√")])])])]),t._v(" "),_("h4",{attrs:{id:"nat"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#nat"}},[t._v("#")]),t._v(" NAT")]),t._v(" "),_("p",[t._v("网络地址转换。其原理类似于路由器的工作方式，使用 NAT 模式可以使得虚拟机通过网络地址转换功能，通过宿主机所在的机器网络对公网进行访问。")]),t._v(" "),_("p",[t._v("其本质原理是虚拟机的网卡连接到宿主机的 VMnet8 虚拟交换机上（安装虚拟机后会创建两张网卡：VMnet1 和 VMnet8，之前还会有一个自带的 VMnet0，这指的是 VM 虚拟化的方式，其他虚拟化在后面讨论，用 VM 虚拟化进行举例），这时候把 VMnet8 当做一个路由器来用，VMnet8 对数据包进行地址转换以后发送到实际网络中，返回也是同理。")]),t._v(" "),_("p",[t._v("这种方式的缺点在于：")]),t._v(" "),_("ol",[_("li",[t._v("虚拟机的网络比较依赖宿主机的网络，宿主机的网络如果断开了，虚拟机的网络也就挂了。")]),t._v(" "),_("li",[t._v("主机 ping 虚拟机，不通；同一宿主的虚拟机，可以 ping 通。")]),t._v(" "),_("li",[t._v("其他主机要访问虚拟机，也不行（这里指的应该是不能直接访问，走 NAT 地址转换应该是可以进来的）。")])]),t._v(" "),_("h4",{attrs:{id:"host-only"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#host-only"}},[t._v("#")]),t._v(" Host-Only")]),t._v(" "),_("p",[t._v("仅主机。经典的建局域网的场景，在这种模式下，一切通信都似乎不行（默认关闭），又似乎可以（可以设置），需要精通网络知识的人进行配置，也比较麻烦。")]),t._v(" "),_("p",[t._v("其本质原理是，将虚拟机连接到了 VNnet1 上面，VMnet1 默认是使用的是桥接方式进行网络连接，但是系统不给其提供任何路由服务，故在默认情况下，虚拟机只能和宿主机通信，无法访问外网。")]),t._v(" "),_("h4",{attrs:{id:"bridged"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#bridged"}},[t._v("#")]),t._v(" Bridged")]),t._v(" "),_("p",[t._v("桥接模式。")]),t._v(" "),_("p",[t._v("这个模式比较厉害，在这个模式下，虚拟机被视为和宿主机同等地位的存在（其网络在一个网段）。")]),t._v(" "),_("p",[t._v("其使用的是宿主机自带的 VMnet0 虚拟网卡（VMnet0 本质上就是一个虚拟网桥），这个网桥有若干接口 (port1, port2,..,portN), 任一端口都可以用于连接主机，剩下的用于连接虚拟机。")]),t._v(" "),_("p",[t._v("虚拟机和主机在一个网段下面，就可以互相通信，很强！")]),t._v(" "),_("h4",{attrs:{id:"internal"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#internal"}},[t._v("#")]),t._v(" Internal")]),t._v(" "),_("p",[t._v("内部网络。内部网络与桥接网络相似，不同之处在于内部通信，不多赘述。\n参考 "),_("a",{attrs:{href:"https://www.jianshu.com/p/305f7384cfe9",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.jianshu.com/p/305f7384cfe9"),_("OutboundLink")],1)]),t._v(" "),_("h3",{attrs:{id:"多网卡-bond-模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多网卡-bond-模式"}},[t._v("#")]),t._v(" 多网卡 bond 模式")]),t._v(" "),_("p",[t._v("多网卡绑定一共有 7 种 bond 模式，bond0 ~ bond6，通常而言，bond 模式是想要将多个物理网卡绑定为一个逻辑网卡。")])])}),[],!1,null,null,null);v.default=r.exports}}]);