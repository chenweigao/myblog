(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{413:function(a,s,t){"use strict";t.r(s);var e=t(3),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"git"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[a._v("#")]),a._v(" Git")]),a._v(" "),t("h2",{attrs:{id:"ssh-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh-server"}},[a._v("#")]),a._v(" SSH Server")]),a._v(" "),t("p",[a._v("Clone form server file using SSH:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone ssh://root@120.78.71.220:22/~/data\n")])])]),t("p",[a._v("Connect using ssh:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ssh")]),a._v(" root@174.137.62.75\n")])])]),t("p",[a._v("ssh key:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ssh-keygen\n")])])]),t("h2",{attrs:{id:"git-reset"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[a._v("#")]),a._v(" Git Reset")]),a._v(" "),t("p",[a._v("在某次提交后如果发现自己忘记添加某些文件，或者写错了提交信息，可以使用"),t("code",[a._v("--amend")]),a._v("选项")]),a._v(" "),t("p",[a._v("一个使用 --amend 的例子：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"initial commit"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" forgotten_file\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit --amend\n")])])]),t("p",[a._v("撤销已暂存的文件")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" reset HEAD reset.md\n")])])]),t("p",[a._v("舍弃对文件的修改")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -- "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("！但是要主要到，"),t("code",[a._v("git checkout")]),a._v("是一条非常危险的命令，执行该命令以后，任何对文件作出的修改都会丢失，因为上述命令用之前版本的文件做了覆盖。")]),a._v(" "),t("p",[a._v("回到远程仓库的状态")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch --all "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" rest --hard origin/master\n")])])]),t("p",[a._v("放弃所有更改")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("h2",{attrs:{id:"git-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-config"}},[a._v("#")]),a._v(" Git Config")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.name "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("username"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global user.email "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("useremail"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global core.editor emacs\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --list\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config user.name\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("help")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("verb"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("cache the config:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global credential.helper cache\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global credential.helper store\n")])])]),t("p",[a._v("如果遇到了 443 的问题，则可以重置 git 的配置：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global credential.helper store\n")])])]),t("h2",{attrs:{id:"github-accelerate"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-accelerate"}},[a._v("#")]),a._v(" GitHub Accelerate")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Update the host in "),t("code",[a._v("C:\\Windows\\System32\\drivers\\etc")])])]),a._v(" "),t("li",[t("p",[a._v("Visit  "),t("a",{attrs:{href:"http://tool.chinaz.com/dns",target:"_blank",rel:"noopener noreferrer"}},[a._v("http://tool.chinaz.com/dns"),t("OutboundLink")],1)])]),a._v(" "),t("li",[t("p",[a._v("Found the IP and update hosts as the follow example:")])])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[a._v("13.250")]),a._v(".177.223 github.com\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("151.101")]),a._v(".228.133 assets-cdn.github.com\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("151.101")]),a._v(".73.194 github.global.ssl.fastly.net\n")])])]),t("h2",{attrs:{id:"git-clone"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-clone"}},[a._v("#")]),a._v(" Git Clone")]),a._v(" "),t("p",[a._v("克隆较慢时使用：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone --depth"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" ulr\n")])])]),t("h2",{attrs:{id:"tag"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[a._v("#")]),a._v(" Tag")]),a._v(" "),t("p",[a._v("show tags:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -l\n")])])]),t("p",[a._v("add tags:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" tag -a v1.0 -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"my first version"')]),a._v("\n")])])]),t("p",[a._v("push tags to origin:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin v1.0\n")])])]),t("p",[a._v("强制推送使用：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push -f origin branch_name\n")])])]),t("h2",{attrs:{id:"status"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[a._v("#")]),a._v(" Status")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" status -s\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ??: untrack")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# M : Modified")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# A : Modified new file")]),a._v("\n")])])]),t("h2",{attrs:{id:"gitignore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitignore"}},[a._v("#")]),a._v(" .gitignore")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" .gitignore\n*."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("oa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n*~\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#Example")]),a._v("\n*.a\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v("lib.a "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 仍然跟踪 lib.a, 即使上一行指令要忽略")]),a._v("\n/TODO "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略当前目录的 todo 文件")]),a._v("\nbuild/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略 build/ 目录下的所有文件")]),a._v("\ndoc/*.txt "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略 doc/notes.txt, 而不忽略 doc/server/arch.txt")]),a._v("\ndoc/**/*.pdf "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 忽略 doc/ 目录下的所有.pdf文件")]),a._v("\n")])])]),t("p",[a._v("如果改动文件不生效的话，使用：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -r --cached "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'update .gitignore'")]),a._v("\n")])])]),t("p",[a._v("除此之外，还可以参考"),t("a",{attrs:{href:"https://github.com/github/gitignore",target:"_blank",rel:"noopener noreferrer"}},[a._v("GitHub官方示例"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"differ"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#differ"}},[a._v("#")]),a._v(" Differ")]),a._v(" "),t("p",[a._v("如果想知道具体的变更内容，而不像 "),t("code",[a._v("git status")]),a._v(" 那么宽泛，可以使用 "),t("code",[a._v("git diff")])]),a._v(" "),t("p",[a._v("查看有哪些已暂存的内容会进入下一次提交，该命令将暂存的变更与上一次提交的内容相比较:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --staged\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --cached\n")])])]),t("p",[a._v("如果要把文件保存在工作目录，但从暂存区移除该文件:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("filename"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" --cached README\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" log/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("*.log\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mv")]),a._v(" README.md README\n")])])]),t("p",[a._v("查看提交历史:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log -p -2\n")])])]),t("p",[a._v("查看简略信息:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" log --stat\n")])])]),t("h2",{attrs:{id:"remote"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remote"}},[a._v("#")]),a._v(" Remote")]),a._v(" "),t("p",[a._v("列出远程仓库的简短名称:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote\n")])])]),t("p",[a._v("显示出Git存储的每个远程仓库对应的 URL:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote -v\n")])])]),t("p",[a._v("检查远程仓库，列出远程仓库的 url 地址以及每个分支的跟踪信息：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote show origin\n")])])]),t("p",[a._v("添加一个远程仓库，并给它起一个简短的名称以便于引用:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("shortname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("url"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("p",[a._v("删除远程仓库")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("rep-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),t("p",[a._v("从远程仓库获取和拉取数据:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("remote-name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# e.g. git fetch pb")]),a._v("\n")])])]),t("p",[a._v("将变更推送到远程仓库:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin master\n")])])]),t("p",[a._v("需要注意的一点是，推送变更时需要拥有远程仓库的写权限，并且克隆后没有任何其他人向远程仓库推送过数据。如果别人和你都clone了这个仓库，而他先推送，你后推送，那么你的这次推送会直接被拒绝。你必须先拉取别人的变更，将其整合到你的工作成果中，然后才能推送。")]),a._v(" "),t("h2",{attrs:{id:"git-别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-别名"}},[a._v("#")]),a._v(" Git 别名")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.co checkout\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.br branch\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config --global alias.unstage "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'reset HEAD --'")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# git unstage filaA == git reset HEAD --fileA")]),a._v("\n")])])]),t("h2",{attrs:{id:"git-branch"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[a._v("#")]),a._v(" Git Branch")]),a._v(" "),t("p",[a._v("分支意味着偏离开发主线并继续你自己的工作而不影响主线开发，分支机制是Git的“杀手锏”！")]),a._v(" "),t("p",[a._v("当你创建一个新分支的时候会发生什么？实际上，Git会创建一个可移动的新指针供你使用。")]),a._v(" "),t("p",[a._v("创建分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch testing\n")])])]),t("p",[a._v("列出所有分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch\n")])])]),t("p",[a._v("切换分支:")]),a._v(" "),t("p",[t("code",[a._v("checkout")]),a._v(" 命令会改变 HEAD 指针，使其指向 testing 分支，在 Gi t中，HEAD 是一个指向当前所在的本地分支的指针")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout testing\n")])])]),t("p",[a._v("分支与合并, 创建并切换到该分支，一般使用这个快速创建分支：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout -b testing\n")])])]),t("p",[a._v("切换回master分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout master\n")])])]),t("p",[a._v("合并分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" merge testing\n")])])]),t("p",[a._v("删除分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -d testing\n")])])]),t("p",[a._v('注意到在merge的时候会有提示"fast-forward"，这由于当前的master分支所指向的提交是要并入的testing分支的直接上游，因为Git会将master分支指针向前移动。')]),a._v(" "),t("p",[a._v("合并冲突处理，配置合并工具：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config merge.tool vimdiff\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config merge.conflictstyle "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff3")]),a._v("\n")])])]),t("h3",{attrs:{id:"分支管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[a._v("#")]),a._v(" 分支管理")]),a._v(" "),t("p",[a._v("查看每个分支上的最新提交:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch -v\n")])])]),t("p",[a._v("查看哪些分支已经合并入当前分支的:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch --merged\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" branch --no-merged\n")])])]),t("p",[a._v("远程分支")]),a._v(" "),t("p",[a._v("如果从Git服务器clone到本地，Git的 clone 命令会自动把这台服务器命名为 origin，使用"),t("code",[a._v("git clone -o <yourname>")]),a._v("便可以修改远程仓库的默认名称为：your name/master。")]),a._v(" "),t("p",[a._v("如果你在本地的 master 分支上进行了一些工作，与此同时，别人向 Git 服务器推送了数据，更新了服务器上的 master 分支，这时你的提交历史就与服务器上的历史产生了偏离。")]),a._v(" "),t("p",[a._v("于是要与服务器同步，下面的命令会查询 origin 对应的服务器地址，并从服务器取得本地尚未包含的数据，然后更新本地数据库，最后把 origin/master 指针移动到最新的位置上去。")]),a._v(" "),t("p",[a._v("与服务器同步:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" fetch origin\n")])])]),t("p",[a._v("与其他人共享serverfix分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin serverfix\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("remote"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("branch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),t("p",[a._v("等价于下述代码的省略形式:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin serverfix:serverfix\n")])])]),t("p",[a._v("第一个为本地分支名，第二个为远程分支名，可把远程分支重命名")]),a._v(" "),t("p",[a._v("跟踪分支")]),a._v(" "),t("p",[a._v("当你克隆一个远程仓库时，Git默认情况下会自动地创建跟踪这远程origin/master分支的本地master分支。除此之外，你也可是设置成不跟踪master分支。")]),a._v(" "),t("p",[t("code",[a._v("git checkout --track origin/serverfix")])]),a._v(" "),t("p",[a._v("或者"),t("code",[a._v("git checkout -b sf origin/serverfix")])]),a._v(" "),t("p",[a._v("完成上述命令以后，你的本地sf就会从origin/server上获取数据。")]),a._v(" "),t("p",[a._v("拉取")]),a._v(" "),t("p",[t("code",[a._v("git fetch")]),a._v("命令会拉取本地没有的远程最新更改数据，但它只会从服务器上拉取数据，然后让你自己进行合并。")]),a._v(" "),t("p",[t("code",[a._v("git pull")]),a._v("命令在大多数情况下基本等同于执行"),t("code",[a._v("git fetch")]),a._v("之后紧跟着执行了"),t("code",[a._v("git merge")]),a._v("命令。")]),a._v(" "),t("p",[a._v("一般来说，显示地直接使用fetch和merge命令比使用git pull要更好，因为git pull的机制常常使人迷惑。")]),a._v(" "),t("p",[a._v("删除远程服务器上的master分支:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" push origin --delete serverfix\n")])])]),t("p",[a._v("上述操作只是删除了远程服务器上的分支指针，Git会保留数据一段时间知道下一次触发垃圾回收。")])])}),[],!1,null,null,null);s.default=n.exports}}]);