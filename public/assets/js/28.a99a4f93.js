(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{362:function(t,a,s){"use strict";s.r(a);var n=s(3),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"abstract"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[t._v("#")]),t._v(" Abstract")]),t._v(" "),s("p",[t._v("Celery 是一个基于分布式消息传输的异步任务队列，它专注于实时处理，同时也支持任务调度。")]),t._v(" "),s("p",[s("a",{attrs:{href:"http://docs.celeryproject.org/en/latest/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("安装 python 版本：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -U Celery\n")])])]),s("p",[t._v("或者可以安装 Celery 的一个或多个扩展：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" celery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("librabbitmq, redis, auth, msgpack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h2",{attrs:{id:"config"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[t._v("#")]),t._v(" Config")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 Redis 作为消息代理和后端存储，序列化和反序列化使用 msgpack, 也可以使用 json, msgpack 相比 json 是一个二进制的类 json 的序列化方式，比 json 的数据结构更小、更快")])]),t._v(" "),s("li",[s("p",[t._v("安装 Redis 可视化软件 RDM(redis desktop manager)")])])]),t._v(" "),s("h2",{attrs:{id:"初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),s("p",[t._v("初始化时指定消息代理和存储：")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# app.py")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" __future__ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" absolute_import"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" unicode_literals\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" celery "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Celery\n\napp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Celery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myapp'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    broker"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'redis://localhost:6379/0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ## add result backend here if needed.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# backend='rpc'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" y\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    app"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("然后再命令行中启动：")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("celery -A app worker -l info\n")])])]),s("h2",{attrs:{id:"调用-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调用-task"}},[t._v("#")]),t._v(" 调用 Task")]),t._v(" "),s("p",[t._v("参考这篇文章："),s("a",{attrs:{href:"https://mp.weixin.qq.com/s/kxwlLQ5H479PXCKuS4ZueA",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://mp.weixin.qq.com/s/kxwlLQ5H479PXCKuS4ZueA"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("celery 调用 task 有三种方式：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("apply_async(args[, kwargs[, …]])")]),t._v(", 这种方式会往消息队列发送消息, 并支持各种参数使用")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("delay(*args, **kwargs)")]),t._v(", 是apply_async 一种简明调用方式，但是不支持很多额外的参数")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("calling ( __call__)")]),t._v(", 应用支持调用API的对象，例如add(2,2), 意味着任务将在当前进程中执行，而不是由worker执行（不会发送消息）")])])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[t._v("说明：本例中的 T 即为 task 名称\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于apply_async 的简单调用方式")]),t._v("\nT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kwarg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kwarg'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务会在10s 后开始执行")]),t._v("\nT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("countdown"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务会在 now 之后的10秒开始执行")]),t._v("\nT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" timedelta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务会在一分钟之后执行，在两分钟后过期")]),t._v("\nT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("countdown"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" expires"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务会在now之后的两天过期")]),t._v("\nT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply_async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expires"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("now "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" timedelta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("days"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);