(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{409:function(s,a,t){"use strict";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"thread-and-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#thread-and-process"}},[s._v("#")]),s._v(" Thread and Process")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("进程")]),s._v(" "),t("p",[s._v("进程是程序的一次执行过程，是一个动态概念，是程序在执行过程中分配和管理资源的基本单位，每一个进程都有自己的一个地址空间，至少有 5 种基本状态，他们分别是：初始态，就绪态，执行态，等待态，终止态。")])]),s._v(" "),t("li",[t("p",[s._v("线程")]),s._v(" "),t("p",[s._v("线程是 CPU 调度和分派的基本单位，它可以与同属一个进程的其他线程共享进程所拥有的全部资源。")])]),s._v(" "),t("li",[t("p",[s._v("联系")]),s._v(" "),t("p",[s._v("线程是进程的一部分，一个线程只能属于一个进程，而一个进程可以有多个线程，但至少有一个线程。")])]),s._v(" "),t("li",[t("p",[s._v("区别")]),s._v(" "),t("p",[s._v("根本区别：进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位。")]),s._v(" "),t("p",[s._v("开销方面：每个进程都有独立的代码和数据空间（进程上下文），程序之间切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每一个线程都有自己独立的 "),t("strong",[s._v("运行栈")]),s._v(" 和 "),t("strong",[s._v("程序计数器（PC）")]),s._v("，线程之间的切换开销小。")]),s._v(" "),t("p",[s._v("内存分配：系统在运行时为每个进程分配不同的内存空间；而对线程而言，除了 CPU 外，系统不会为线程分配内存，线程组之间只能共享资源。")]),s._v(" "),t("p",[s._v("包含关系：没有线程的进程可以看做是单线程的，如果一个进程内有多个线程，则执行过程是多个线程共同完成的；线程是进程的一部分，所以线程也被成为轻量级进程。")])]),s._v(" "),t("li",[t("p",[s._v("并发和隔离")]),s._v(" "),t("p",[s._v("操作系统中有两个重要的概念：并发和隔离。")]),s._v(" "),t("p",[s._v("并发是为了尽量让硬件利用率高，线程是为了在系统层面做到并发，线程上下文切换效率比进程上下文切换效率高很多，这样可以提高并发效率。")]),s._v(" "),t("p",[s._v("隔离是并发以后要解决的重要问题，计算机的资源一般是共享的，隔离能保障资源的回收，不影响其他代码的使用。")])])]),s._v(" "),t("h2",{attrs:{id:"多进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多进程"}},[s._v("#")]),s._v(" 多进程")]),s._v(" "),t("h3",{attrs:{id:"fork"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fork"}},[s._v("#")]),s._v(" fork()")]),s._v(" "),t("p",[s._v("程序运行时操作系统会创建一个进程，并为它分配资源，然后把该进程放入就绪队列，进程调取器选中的话就为该进程分配 CPU 时间，程序真正开始运行。")]),s._v(" "),t("p",[s._v("Linux使用 "),t("code",[s._v("fork()")]),s._v(" 来创建子进程，其返回值的含义是：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("负数：创建子进程失败")])]),s._v(" "),t("li",[t("p",[s._v("0： 返回在子进程中")])]),s._v(" "),t("li",[t("p",[s._v("正数：返回在父进程中，该正数为新创建的子进程的 pid")])])]),s._v(" "),t("p",[s._v("注意到 fork 函数在调用之后会返回"),t("strong",[s._v("两次")]),s._v(", 他在调用进程中(称为父进程)中返回一次，返回值是新派生进程(子进程)的进程 ID 号；在子进程中又返回一次，进程号为 0。因此，返回值本身告知当前进程是子进程还是父进程。")]),s._v(" "),t("p",[s._v("fork 在子进程返回 0 而不是父进程的进程 ID 的原因在于：任何子进程只有一个父进程，而且子进程总是可以通过 getppid 取得父进程的进程 ID。相反，父进程可以有很多个子进程，而且无法获得各个子进程的进程 ID。如果父进程想跟踪所有子进程的进程 ID，那么它必须记录每次调用 fork 的返回值。")]),s._v(" "),t("p",[s._v("注意子进程结束时，父进程应当回收子进程，不然子进程会变成僵尸进程。")]),s._v(" "),t("p",[s._v("Linux 下查看僵尸进程使用 "),t("code",[s._v("top")]),s._v(" 命令，其中的 "),t("code",[s._v("zombie")]),s._v(" 前的数量就代表僵尸进程的数量。")]),s._v(" "),t("p",[s._v("问题：连续调用三次 "),t("code",[s._v("fork()")]),s._v(", 会返回几个进程？")]),s._v(" "),t("p",[s._v("答：2^3 个。")]),s._v(" "),t("p",[s._v("多进程相比于多线程而言更加健壮，因为多线程程序只要有一个线程奔溃，整个进程也会奔溃，而一个进程奔溃并不会对另一个进程造成影响，因为进程拥有自己的地址空间。")]),s._v(" "),t("h3",{attrs:{id:"exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[s._v("#")]),s._v(" exec()")]),s._v(" "),t("p",[s._v("fork 有两种典型用法：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("一个进程创建自身的副本，这样每个副本都可以在另一个副本执行其他任务的同时处理各自的某个操作。网络服务器一般都用这个方法。")])]),s._v(" "),t("li",[t("p",[s._v("一个进程想要执行另外一个程序。该进程调用 fork 创建一个自身的副本，然后其中一个副本(通常为子进程)调用 exec 把自身替换成新的程序。shell 就是使用的这个方法。")])])]),s._v(" "),t("p",[s._v("exec 函数有 6 个，但是只有 execve 是内核中的系统调用，其他 5 个都是调用 execve 的库函数。")]),s._v(" "),t("h2",{attrs:{id:"进程间通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信"}},[s._v("#")]),s._v(" 进程间通信")]),s._v(" "),t("p",[s._v("进程间通信（IPC）的方式包括：信号，管道，共享内存，消息队列，信号量，封装的有 TCP/IP 套接字。")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/chenweigao/multi_thread_and_process",target:"_blank",rel:"noopener noreferrer"}},[s._v("代码实现可以参考 GitHub"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"命名管道-fifo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命名管道-fifo"}},[s._v("#")]),s._v(" 命名管道 FIFO")]),s._v(" "),t("p",[s._v("用到 "),t("code",[s._v("sys/stat.h")]),s._v(", "),t("code",[s._v("unistd.h")]),s._v(", "),t("code",[s._v("linux/stat.h")]),s._v(" 等头文件。")]),s._v(" "),t("p",[s._v("命名管道变编程使用 "),t("code",[s._v("FILE")]),s._v(" 对象，和文件读写的操作很相似，创建 FIFO 使用：")]),s._v(" "),t("p",[t("code",[s._v("mkfifo(FIFO_FILE, 0666)")]),s._v(":")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("FIFO_FILR 为宏定义的文件名："),t("code",[s._v('#define FIFO_FILE "MYFIFO"')])])]),s._v(" "),t("li",[t("p",[s._v("返回值小于 0 则说明命名管道存在")])]),s._v(" "),t("li",[t("p",[s._v("返回值大于 0 则说明创建命名管道成功")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("0666")]),s._v(" 代表权限。在此对权限进行以下说明：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[s._v("读")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("写")]),s._v(" "),t("th",{staticStyle:{"text-align":"center"}},[s._v("执行")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[s._v("4")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("2")]),s._v(" "),t("td",{staticStyle:{"text-align":"center"}},[s._v("1")])])])]),s._v(" "),t("p",[s._v("从表格中可以看出， "),t("code",[s._v("6")]),s._v("  代表的含义为 4 + 2, 为读和写。四位数字代表特殊权限位，拥有者位，同组用户位，其余用户位。")])])]),s._v(" "),t("p",[s._v("要进行命名管道的通信，则使用一个 buff 读取文件指针，例如：")]),s._v(" "),t("p",[t("code",[s._v('FILE* fp = fopen(FIFO_FILE, "r")')]),s._v(" 打开命名管道；")]),s._v(" "),t("p",[t("code",[s._v("fgets(readbuf, 80, fp)")]),s._v(" 读取命名管道，相应的，可以使用 "),t("code",[s._v("fputs()")]),s._v(" 写入命名管道。")]),s._v(" "),t("h3",{attrs:{id:"ipc-消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipc-消息"}},[s._v("#")]),s._v(" IPC 消息")]),s._v(" "),t("p",[s._v("用到 "),t("code",[s._v("sys/ipc.h")]),s._v(", "),t("code",[s._v("sys/msg.h")]),s._v(" 等头文件。")]),s._v(" "),t("p",[s._v("创建一个 ipc 消息的方式一般为：")]),s._v(" "),t("p",[t("code",[s._v("int msgid = msgget((key_t)1234, 0666|IPC_CREAT);")])]),s._v(" "),t("p",[s._v("返回值说明如下：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("返回 -1：创建失败")])]),s._v(" "),t("li",[t("p",[s._v("否则，成功创建，该消息的 id 为 1234")])])]),s._v(" "),t("p",[s._v("接收和发送消息使用：")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("msgrcv(msgid, data, BUFSIZE, 0, 0)")]),s._v(": 返回 -1 则失败，否则接收到消息值 data.")])]),s._v(" "),t("li",[t("p",[t("code",[s._v("msgsnd(msgid, data, BUFSIZE, 0)")]),s._v(": 返回 -1 则失败，否则发送消息。")])])]),s._v(" "),t("h3",{attrs:{id:"共享内存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#共享内存"}},[s._v("#")]),s._v(" 共享内存")]),s._v(" "),t("p",[s._v("用到 "),t("code",[s._v("sys/ipc.h")]),s._v(", "),t("code",[s._v("sys/shm.h")]),s._v(" 头文件。")]),s._v(" "),t("p",[s._v("创建一个共享内存的方式一般如下：")]),s._v(" "),t("p",[t("code",[s._v("int shmid = shmget((key_t)1234, 256, 0666|IPC_CREAT)")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("返回负数："),t("code",[s._v("shmget")]),s._v(" 失败")])]),s._v(" "),t("p",[t("code",[s._v("char *shmptr = shmat(shmid, 0, 0)")]),s._v(":")]),s._v(" "),t("ul",[t("li",[s._v("返回 -1：失败")])]),s._v(" "),t("p",[s._v("然后使用 "),t("code",[s._v("strcpy")]),s._v(" 将 "),t("code",[s._v("shmptr")]),s._v(" 拷贝出来或者拷贝出去：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("write: "),t("code",[s._v("strcpy(shmptr, char* text)")])])]),s._v(" "),t("li",[t("p",[s._v("read: "),t("code",[s._v("strcpy(buf, shmptr)")])])])]),s._v(" "),t("h2",{attrs:{id:"ssh"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ssh"}},[s._v("#")]),s._v(" SSH")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" start\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" openssh-server\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#ssh config")]),s._v("\n/etc/ssh/sshd_config\n")])])]),t("p",[s._v("start server:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v(" restart/start\n")])])]),t("p",[s._v("A bug:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" ssh-keygen -t rsa -f /etc/ssh/ssh_host_ed25519_key\n")])])]),t("h2",{attrs:{id:"python-file-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#python-file-server"}},[s._v("#")]),s._v(" Python File Server")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("python -m http.server\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#default port: 8000")]),s._v("\n\npython -m http.server "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#in port 80")]),s._v("\n")])])]),t("h2",{attrs:{id:"program-status"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#program-status"}},[s._v("#")]),s._v(" Program Status")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" %ERRORLEVEL%\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#windows")]),s._v("\n")])])]),t("hr"),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("Shell")]),s._v(" "),t("p",[s._v("This is a basic note about Linux shell, I have wrote plenty of bash shell,  which helps solve problem easily.")]),s._v(" "),t("p",[s._v("Include "),t("strong",[s._v("system information, SSH, read -p, shell array, sed, AWK")])])]),s._v(" "),t("h2",{attrs:{id:"system-information"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#system-information"}},[s._v("#")]),s._v(" System Information")]),s._v(" "),t("p",[s._v("Sometimes, you may want to see the system kernel version, 2 ways are available :")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("lsb_release -a\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/issue\n")])])]),t("p",[s._v("change password for a user:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" root\n")])])]),t("p",[s._v("echo current time as a file name:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"today"')]),s._v(" +"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Y%m%d_%H%M%S"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(".txt \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# work log")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log -4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" log/"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"today"')]),s._v(" +"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Y%m%d"')]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(".txt\n")])])]),t("h2",{attrs:{id:"add-choice-for-user-read-p"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-choice-for-user-read-p"}},[s._v("#")]),s._v(" Add Choice for User - Read -p")]),s._v(" "),t("p",[t("code",[s._v("read -p")]),s._v(" is very useful for  this, for example:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -n1 -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"What is your system version? \n1: Ubuntu 16.04;\n2: Ubuntu 17.10;\n3: Ubuntu 18.04;\nchoose a number between 1, 2 and 3: "')]),s._v(" answer\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$answer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n")])])]),t("p",[t("em",[s._v("Tips")]),s._v(" :")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("-n1")]),s._v(" : -n and 1 are used together, which means "),t("code",[s._v("read")]),s._v(" commmand will quit when system accept a single character, no need for Enter.")]),s._v(" "),t("li",[t("code",[s._v("-s")]),s._v(" : this options will avoid displaying user "),t("em",[s._v("passwords")]),s._v(" on the screen.")]),s._v(" "),t("li",[t("code",[s._v("-t 5")]),s._v(": overtime option, this means that user must complete the input within 5 seconds.")])]),s._v(" "),t("h2",{attrs:{id:"shell-array"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-array"}},[s._v("#")]),s._v(" Shell Array")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("arrayName")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("array_content"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get the content of arrary, or [*]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${arraryName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get the size of array")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("arrayName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("*"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("}")]),s._v("\n")])])]),t("h2",{attrs:{id:"sed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sed"}},[s._v("#")]),s._v(" Sed")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("current_plugins_version")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("dpkg -s picoscenes-plugins-demo-rxsbroadcaster-chronos "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" Version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/Version: //g'")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("p",[s._v("This is a basic use of sed, "),t("code",[s._v("sed 's/Version: //g'")]),s._v(" means that a select:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("Version: "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.0406")]),s._v(".2333\n")])])]),t("p",[s._v("Output is:")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18.0406")]),s._v(".2333\n")])])]),t("p",[s._v("That means "),t("strong",[s._v("replace")]),s._v(' "Version:  " with '),t("strong",[s._v("empty")]),s._v(".")]),s._v(" "),t("p",[s._v("To replace the string in the file, use "),t("code",[s._v("-i")]),s._v(":")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/GRUB_HIDDEN_TIMEOUT=0/#GRUB_HIDDEN_TIMEOUT=0/g'")]),s._v("  /etc/default/\n")])])]),t("p",[s._v("This is an example that we do the CSI experiment, update the "),t("code",[s._v("~/etc/default/grub")]),s._v(" make the new kernel version could be seen.")]),s._v(" "),t("h2",{attrs:{id:"tr-and-awk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tr-and-awk"}},[s._v("#")]),s._v(" tr and awk")]),s._v(" "),t("p",[t("code",[s._v("tr")]),s._v(" 可以理解为"),t("code",[s._v("sed")]),s._v("的简化版本")]),s._v(" "),t("p",[s._v("Usage: "),t("code",[s._v("tr [OPTION]... SET1 SET2")])]),s._v(" "),t("ul",[t("li",[t("p",[s._v("-c, -C, --complement: use the complement of SET1(不常用)")])]),s._v(" "),t("li",[t("p",[s._v("-d, -delete: delete characters in SET1")])]),s._v(" "),t("li",[t("p",[s._v("-s: replace each sequence of a repeated character, 删除所有重复出现字符序列，只保留第一个")])])]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将所有的the替换为my")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'the'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'my'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除所有的the")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'the'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#小写变大写")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a-z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("A-Z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#删除连续的重复字母")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -s "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a-zA-Z"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[t("a",{attrs:{href:"https://www.tutorialspoint.com/awk",target:"_blank",rel:"noopener noreferrer"}},[s._v("AWK Tutorial"),t("OutboundLink")],1)]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v("\n$ usr/bin/awk\n")])])]),t("p",[s._v("display the complete content of the files using AWK:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print}'")]),s._v(" xx.txt\n")])])]),t("p",[s._v("AWK script:")]),s._v(" "),t("p",[s._v("create a text file "),t("code",[s._v("command.awk")]),s._v(" containing the AWK command:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("print"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("the use it:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -f command.awk xx.txt\n")])])]),t("p",[s._v("Options:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -v option")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Jerry "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'BEGIN{printf \"Name = %s"),t("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("\", name}'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" --help\n")])])]),t("p",[s._v("print column:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(' "'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v("}'")]),s._v(" marks.txt\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or in any order")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(' "'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("}'")]),s._v(" marks.txt\n")])])]),t("p",[s._v("there we print the third and the fourth fields.")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/a/ {print "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(' "'),t("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("}'")]),s._v(" marks.txt\n")])])]),t("p",[s._v("the pattern, only print 4 lines:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/a/{++cnt} END {print \"Count = \", cnt}'")]),s._v(" marks.txt\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Count = 4(where the marks.txt has 5 lines)")]),s._v("\n")])])]),t("blockquote",[t("p",[t("strong",[s._v("$0")]),s._v(" variable stores the entire line and in the absence of a body block, default action is taken, i.e., the print action.")])]),s._v(" "),t("h2",{attrs:{id:"tar"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tar"}},[s._v("#")]),s._v(" tar")]),s._v(" "),t("p",[s._v("解压一般的 tag.gz:")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xzvf "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("解压 xz：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("xz -d *.tar.xz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf *.tar\n")])])]),t("h2",{attrs:{id:"查看端口号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看端口号"}},[s._v("#")]),s._v(" 查看端口号")]),s._v(" "),t("p",[s._v("查看端口被哪个进程占用：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lsof")]),s._v(" -i:80\n")])])]),t("p",[s._v("或者")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("netstat")]),s._v(" -ano "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n")])])]),t("h2",{attrs:{id:"守护进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#守护进程"}},[s._v("#")]),s._v(" 守护进程")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" python3 webhook.py "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);